// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlc

import (
	"time"

	"github.com/annexsh/annex/test"
	"github.com/annexsh/annex/uuid"
)

type CaseExecution struct {
	ID              test.CaseExecutionID `json:"id"`
	TestExecutionID test.TestExecutionID `json:"test_execution_id"`
	CaseName        string               `json:"case_name"`
	ScheduleTime    time.Time            `json:"schedule_time"`
	StartTime       *time.Time           `json:"start_time"`
	FinishTime      *time.Time           `json:"finish_time"`
	Error           *string              `json:"error"`
}

type Context struct {
	ID string `json:"id"`
}

type Log struct {
	ID              uuid.V7               `json:"id"`
	TestExecutionID test.TestExecutionID  `json:"test_execution_id"`
	CaseExecutionID *test.CaseExecutionID `json:"case_execution_id"`
	Level           string                `json:"level"`
	Message         string                `json:"message"`
	CreateTime      time.Time             `json:"create_time"`
}

type Test struct {
	ID          uuid.V7   `json:"id"`
	ContextID   string    `json:"context_id"`
	TestSuiteID uuid.V7   `json:"test_suite_id"`
	Name        string    `json:"name"`
	HasInput    bool      `json:"has_input"`
	CreateTime  time.Time `json:"create_time"`
}

type TestDefaultInput struct {
	TestID uuid.V7 `json:"test_id"`
	Data   []byte  `json:"data"`
}

type TestExecution struct {
	ID           test.TestExecutionID `json:"id"`
	TestID       uuid.V7              `json:"test_id"`
	HasInput     bool                 `json:"has_input"`
	ScheduleTime time.Time            `json:"schedule_time"`
	StartTime    *time.Time           `json:"start_time"`
	FinishTime   *time.Time           `json:"finish_time"`
	Error        *string              `json:"error"`
}

type TestExecutionInput struct {
	TestExecutionID test.TestExecutionID `json:"test_execution_id"`
	Data            []byte               `json:"data"`
}

type TestSuite struct {
	ID          uuid.V7 `json:"id"`
	ContextID   string  `json:"context_id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
}

type TestSuiteRegistration struct {
	ContextID   string  `json:"context_id"`
	TestSuiteID uuid.V7 `json:"test_suite_id"`
	RunnerID    string  `json:"runner_id"`
	Version     string  `json:"version"`
}
